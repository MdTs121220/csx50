sort1 uses: Bubble Sort

How do you know?: I tried to do a test using the data sorted list 50000.txt, the result is that sort1 has the fastest real time compared to sort2 and sort3. This sort1 has the fastest time when running against already sorted data. and making it better than sort2 and sort3 since in the best case scenario, bubble sort is omega.

sort2 uses: Merge Sort

How do you know?: When I do the Sort2 test it takes the fastest time when I try to do the test using an unsorted list (random.txt), and according to the theory I learned from the CS50 video, that Merge sort's best case is omega (n log n) and worst case is O (n log n).

sort3 uses: Selection Sort

How do you know?: Sort3 is the last choice as I've found 2 answers from sort so I believe sort3 is the sort of choice. I did a test using process sort, the selection sort still has to go through each element n^2 times and still makes comparisons, making it slower than bubble sort and merge sort.
